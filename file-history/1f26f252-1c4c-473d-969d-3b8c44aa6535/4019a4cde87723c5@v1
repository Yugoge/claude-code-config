{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",

  "model": "claude-sonnet-4-5-20250929",
  "includeCoAuthoredBy": true,

  "env": {
    "CLAUDE_BASH_MAINTAIN_PROJECT_WORKING_DIR": "1",
    "DISABLE_TELEMETRY": "1",
    "DISABLE_ERROR_REPORTING": "0",
    "MAX_MCP_OUTPUT_TOKENS": "40000",
    "EDITOR": "nano",
    "LANG": "en_US.UTF-8"
  },

  "permissions": {
    "allow": [
      "Bash(gh auth:*)",
      "Bash(git status)",
      "Bash(git diff*)",
      "Bash(git log*)",
      "Bash(git branch*)",
      "Bash(git add*)",
      "Bash(git commit*)",
      "Bash(git pull*)",
      "Bash(git push)",
      "Bash(npm *)",
      "Bash(yarn *)",
      "Bash(pnpm *)",
      "Bash(pip *)",
      "Bash(python *)",
      "Bash(node *)",
      "Bash(npx *)",
      "Bash(go *)",
      "Bash(cargo *)",
      "Bash(rustc *)",
      "Bash(docker ps*)",
      "Bash(docker images*)",
      "Bash(docker logs*)",
      "Bash(kubectl get*)",
      "Bash(kubectl describe*)",
      "Bash(ls*)",
      "Bash(cd*)",
      "Bash(pwd)",
      "Bash(cat*)",
      "Bash(grep*)",
      "Bash(find*)",
      "Bash(which*)",
      "Bash(echo*)"
    ],
    "deny": [
      "Read(.env)",
      "Read(**/.env)",
      "Read(**/.env.*)",
      "Read(**/credentials*)",
      "Read(**/*secret*)",
      "Read(**/*password*)",
      "Read(**/*.key)",
      "Read(**/*.pem)",
      "Write(.env)",
      "Write(**/.env)",
      "Write(**/credentials*)",
      "Bash(rm -rf /)",
      "Bash(rm -rf /*)",
      "Bash(dd *)",
      "Bash(mkfs*)",
      "Bash(fdisk*)",
      "Bash(shutdown*)",
      "Bash(reboot*)",
      "Bash(halt*)",
      "Bash(poweroff*)",
      "Bash(systemctl stop*)",
      "Bash(systemctl disable*)",
      "Bash(curl * | sh)",
      "Bash(wget * | sh)"
    ],
    "ask": [
      "Bash(docker run*)",
      "Bash(docker exec*)",
      "Bash(docker rm*)",
      "Bash(kubectl delete*)",
      "Bash(kubectl apply*)",
      "Bash(kubectl create*)",
      "Bash(git push --force*)",
      "Bash(git push -f*)",
      "Bash(git reset --hard*)",
      "Bash(npm publish*)",
      "Bash(yarn publish*)",
      "Bash(rm -rf*)",
      "Write(**/package.json)",
      "Edit(**/package.json)",
      "Write(**/pyproject.toml)",
      "Edit(**/pyproject.toml)",
      "Write(**/Cargo.toml)",
      "Edit(**/Cargo.toml)",
      "Write(**/go.mod)",
      "Edit(**/go.mod)"
    ]
  },

  "hooks": {
    "SessionStart": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/hooks/session_start.sh"
          },
          {
            "type": "command",
            "command": "bash ~/.claude/hooks/ensure-git-repo.sh"
          }
        ]
      }
    ],

    "UserPromptSubmit": [
      {
        "matcher": ".*",
        "hooks": [
          {
            "type": "command",
            "command": "if [ -f .claude/CLAUDE.md ]; then echo '[INFO] Project CLAUDE.md loaded'; fi"
          }
        ]
      }
    ],

    "PreToolUse": [
      {
        "matcher": "Bash\\(rm -rf.*\\)|Bash\\(rm -r.*\\)",
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/hooks/pre_tool_use_safety.sh"
          }
        ]
      },
      {
        "matcher": "Bash\\(git push --force.*\\)|Bash\\(git push -f.*\\)",
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/hooks/pre_tool_use_safety.sh"
          }
        ]
      },
      {
        "matcher": "Write\\(.*package\\.json.*\\)|Edit\\(.*package\\.json.*\\)",
        "hooks": [
          {
            "type": "command",
            "command": "~/.claude/hooks/pre_tool_use_safety.sh"
          }
        ]
      }
    ],

    "PostToolUse": [
      {
        "matcher": "Write|Edit",
        "hooks": [
          {
            "type": "command",
            "command": "echo '‚úÖ File modified successfully'"
          }
        ]
      },
      {
        "matcher": "Bash\\(git commit.*\\)",
        "hooks": [
          {
            "type": "command",
            "command": "git log -1 --oneline && echo '‚úÖ Commit created successfully'"
          }
        ]
      },
      {
        "matcher": "Bash\\(npm install.*\\)|Bash\\(yarn install.*\\)|Bash\\(pnpm install.*\\)",
        "hooks": [
          {
            "type": "command",
            "command": "echo '‚úÖ Dependencies installed. Run tests to verify.'"
          }
        ]
      }
    ],

    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "bash ~/.claude/hooks/auto-commit.sh"
          }
        ]
      }
    ],

    "SessionEnd": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "echo 'üëã Session ended | ‰ºöËØùÁªìÊùü' && echo 'Remember: Review changes before pushing to remote!'"
          }
        ]
      }
    ]
  },

  "cleanupPeriodDays": 30
}
