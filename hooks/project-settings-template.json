{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",

  "comment": "Project-level Claude Code settings template",
  "comment_zh": "项目级 Claude Code 配置模板",
  "comment_usage": "Copy this to your project's .claude/settings.json",

  "hooks": {
    "PreToolUse": [
      {
        "matcher": "Edit|Write",
        "hooks": [
          {
            "type": "command",
            "comment": "Prevent editing sensitive files",
            "command": "python3 -c \"import json, sys; data=json.load(sys.stdin); path=data.get('tool_input',{}).get('file_path',''); sys.exit(2 if any(p in path for p in ['.env', 'credentials.json', '.git/', 'node_modules/']) else 0)\""
          }
        ]
      }
    ],

    "PostToolUse": [
      {
        "matcher": "Edit|Write",
        "hooks": [
          {
            "type": "command",
            "comment": "Auto-format JavaScript/TypeScript files with Prettier (optional)",
            "command": "if [[ \"$file_path\" =~ \\.(js|jsx|ts|tsx|json)$ ]]; then npx prettier --write \"$file_path\" 2>/dev/null || true; fi"
          },
          {
            "type": "command",
            "comment": "Auto-format Python files with Black (optional)",
            "command": "if [[ \"$file_path\" =~ \\.py$ ]]; then black \"$file_path\" 2>/dev/null || true; fi"
          }
        ]
      }
    ]
  },

  "permissions": {
    "allow": [
      "Bash(npm test)",
      "Bash(npm run build)",
      "Bash(pytest*)",
      "Bash(go test*)",
      "Bash(cargo test*)"
    ],
    "deny": [
      "Read(.env)",
      "Read(**/.env*)",
      "Write(.env)",
      "Write(**/.env*)"
    ],
    "ask": [
      "Bash(npm publish*)",
      "Bash(docker run*)"
    ]
  }
}
